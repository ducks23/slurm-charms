version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.2.1
  slack: circleci/slack@3.4.2

workflows:
  test-build-deploy:
    jobs:
      - lint-charms:
          context: aws
      - build-and-deploy-charms-on-lxd:
          context: aws
          requires:
            - lint-charms
      - push-charms-to-s3:
          context: aws
          requires:
            - build-and-deploy-charms-on-lxd

jobs:
  lint-charms:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          name: Install tox
          command: |
            sudo apt-get update
            sudo apt-get install -y tox
      - run:
          command: |
            make lint
      - slack/status:
          fail_only: false

  build-and-deploy-charms-on-lxd:
    docker:
      - image: cimg/base:2020.09

    environment:
      JUJU_DATA: /home/circleci/project/.local/share/juju

    steps:
      - checkout

      - run:
          name: "Install snapd"
          command: |
            sudo apt-get update
            sudo apt-get install --only-upgrade -y snapd

      - run:
          name: "Add /snap/bin to PATH"
          command: |
            echo 'export PATH=/snap/bin:/usr/bin:$PATH' >> $BASH_ENV

      - run:
          name: "Install charmcraft"
          command: |
            sudo /usr/bin/snap install charmcraft --beta

      - run:
          name: "Build charms"
          command: |
            make charms

      - run:
          name: "Install Juju"
          command: |
            sudo apt-get purge juju
            sudo snap install juju --classic

      - run:
          name: "Install juju-wait"
          command: |
            sudo snap install juju-wait --classic

      - run:
          name: "Install jq"
          command: |
            sudo snap install jq

      - run:
          name: "Install aws-cli"
          command: |
            sudo snap install aws-cli --classic

      - run:
          name: "Circleci juju creds from s3"
          command: |
            aws s3 cp s3://omnivector-cicd/juju-local/juju-local.tar.gz .
            tar -xzvf juju-local.tar.gz

      - run:
          name: "Add and configure model"
          command: |
            echo $JUJU_CIRCLECI_USER_PASSWORD | juju login --user circleci
            juju add-model circleci-$CIRCLE_SHA1
            juju add-space -m circleci-$CIRCLE_SHA1 nat 172.31.80.0/24 172.31.81.0/24 172.31.82.0/24 172.31.83.0/24
            juju model-config -m circleci-$CIRCLE_SHA1 logging-config="<root>=DEBUG;<unit>=DEBUG"

      - run:
          name: "Pull classic slurm snap from github"
          command: |
            make pull-classic-snap

      - run:
          name: "Deploy slurm charms using the slurm snap resource on Focal on AWS"
          command: |
            juju deploy -m circleci-$CIRCLE_SHA1 ./bundles/slurm-core-focal-aws/bundle.yaml
            #make deploy-focal-bundle-on-aws-from-local-with-snap

      - run:
          name: "Wait for deployment status"
          no_output_timeout: 20m
          command: |
            juju-wait -w -t 1150

      - run:
          name: "Verify slurmrestd"
          command: |
            aws s3 cp s3://omnivector-misc/vpn/osl-aws-us-west-2.ovpn .
            sudo apt install python3-venv openvpn
            python3 -m venv venv
            source venv/bin/activate
            pip3 install python_jwt
            sudo openvpn --config osl-aws-us-west-2.ovpn --daemon
            juju expose slurmrestd
            make test-slurmrestd-api-returns-200
            sudo kill -9 `pgrep -u root openvpn`

      - run:
          name: "Show juju status"
          command: |
            /snap/bin/juju status
          when: always

      - run:
          name: Create artifacts from slurm unit logs
          command: |
            make grab-slurm-logs
            mkdir -p /tmp/slurm-unit-logs
            mv *.log /tmp/slurm-unit-logs/
          when: always

      - store_artifacts:
          path: /tmp/slurm-unit-logs
          when: always

      - save_cache:
          name: Cache built charms once we validate they successfully deploy.
          key: built-slurm-charms-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - slurmrestd.charm
            - slurmctld.charm
            - slurmdbd.charm
            - slurmd.charm

      - run:
          name: Tear down the juju environment
          no_output_timeout: 5m
          when: always
          command: |
            echo $JUJU_CIRCLECI_USER_PASSWORD | juju login --user circleci
            juju remove-application slurmd slurmctld slurmdbd slurmrestd percona-cluster
            juju destroy-model circleci-$CIRCLECI_SHA1
          

      - slack/status:
          fail_only: false

  push-charms-to-s3:
    executor: aws-cli/default
    steps:
      - checkout

      - aws-cli/setup:
          profile-name: default

      - restore_cache:
          name: Restore the charms from the cache to be pushed to s3
          key: built-slurm-charms-{{ .Environment.CIRCLE_SHA1 }}

      - run:
          name: "Push charms to s3"
          command: |
            make push-charms-to-edge

      - slack/status:
          fail_only: false
